// Code generated by entc, DO NOT EDIT.

package ent

import (
	"api/ent/category"
	"api/ent/comment"
	"api/ent/faq"
	"api/ent/image"
	"api/ent/message"
	"api/ent/product"
	"api/ent/profile"
	"api/ent/schema"
	"api/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescCreatedAt is the schema descriptor for created_at field.
	categoryDescCreatedAt := categoryFields[6].Descriptor()
	// category.DefaultCreatedAt holds the default value on creation for the created_at field.
	category.DefaultCreatedAt = categoryDescCreatedAt.Default.(func() time.Time)
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescStatus is the schema descriptor for status field.
	commentDescStatus := commentFields[3].Descriptor()
	// comment.DefaultStatus holds the default value on creation for the status field.
	comment.DefaultStatus = commentDescStatus.Default.(bool)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[4].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	faqFields := schema.Faq{}.Fields()
	_ = faqFields
	// faqDescQuestion is the schema descriptor for question field.
	faqDescQuestion := faqFields[0].Descriptor()
	// faq.QuestionValidator is a validator for the "question" field. It is called by the builders before save.
	faq.QuestionValidator = faqDescQuestion.Validators[0].(func(string) error)
	// faqDescStatus is the schema descriptor for status field.
	faqDescStatus := faqFields[2].Descriptor()
	// faq.DefaultStatus holds the default value on creation for the status field.
	faq.DefaultStatus = faqDescStatus.Default.(bool)
	// faqDescCreatedAt is the schema descriptor for created_at field.
	faqDescCreatedAt := faqFields[3].Descriptor()
	// faq.DefaultCreatedAt holds the default value on creation for the created_at field.
	faq.DefaultCreatedAt = faqDescCreatedAt.Default.(func() time.Time)
	imageFields := schema.Image{}.Fields()
	_ = imageFields
	// imageDescCreatedAt is the schema descriptor for created_at field.
	imageDescCreatedAt := imageFields[4].Descriptor()
	// image.DefaultCreatedAt holds the default value on creation for the created_at field.
	image.DefaultCreatedAt = imageDescCreatedAt.Default.(func() time.Time)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[7].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescCreatedAt is the schema descriptor for created_at field.
	productDescCreatedAt := productFields[6].Descriptor()
	// product.DefaultCreatedAt holds the default value on creation for the created_at field.
	product.DefaultCreatedAt = productDescCreatedAt.Default.(func() time.Time)
	profileFields := schema.Profile{}.Fields()
	_ = profileFields
	// profileDescCreatedAt is the schema descriptor for created_at field.
	profileDescCreatedAt := profileFields[4].Descriptor()
	// profile.DefaultCreatedAt holds the default value on creation for the created_at field.
	profile.DefaultCreatedAt = profileDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
